// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Medicamento {
  id             String                 @id @default(auto()) @map("_id") @db.ObjectId
  nome           String
  principioAtivo String
  descricao      String
  createdAt      DateTime               @default(now())
  updatedAt      DateTime               @updatedAt
  prescricoes    MedicamentoPrescrito[] @relation("MedicamentoToPrescrito")
}

model MedicamentoPrescrito {
  id               String      @id @default(auto()) @map("_id") @db.ObjectId
  medicamento      Medicamento @relation("MedicamentoToPrescrito", fields: [medicamentoId], references: [id])
  medicamentoId    String      @db.ObjectId
  posologia        String
  dosagem          Float
  unidadeDosagem   String
  viaAdministracao String
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
}

model Endereco {
  id                String              @id @default(auto()) @map("_id") @db.ObjectId
  cep               String
  rua               String
  numero            Int
  bairro            String
  cidade            String
  estado            String
  complemento       String?
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  UnidadeHospitalar UnidadeHospitalar[]
  Paciente          Paciente[]
}

model Especialidade {
  id                  String             @id @default(auto()) @map("_id") @db.ObjectId
  nome                String
  descricao           String
  createdAt           DateTime           @default(now())
  updatedAt           DateTime           @updatedAt
  UnidadeHospitalar   UnidadeHospitalar? @relation(fields: [unidadeHospitalarId], references: [id])
  unidadeHospitalarId String?            @db.ObjectId
  Medico              Medico[]
  Solicitacao         Solicitacao[]
}

model UnidadeHospitalar {
  id                    String          @id @default(auto()) @map("_id") @db.ObjectId
  nome                  String
  telefone              String
  email                 String
  endereco              Endereco        @relation(fields: [enderecoId], references: [id])
  dadosPessoal          String
  latitude              Float
  longitude             Float
  disponibilidadeLeitos Int
  especialidades        Especialidade[]
  temUTI                Boolean
  createdAt             DateTime        @default(now())
  updatedAt             DateTime        @updatedAt
  enderecoId            String          @db.ObjectId
  Medico                Medico[]
  TransferenciasOrigem  Transferencia[] @relation("OrigemTransferencia")
  TransferenciasDestino Transferencia[] @relation("DestinoTransferencia")
}

enum Papel {
  USUARIO
  REGULADOR
}

model Medico {
  crm                     String            @id @map("_id")
  nome                    String
  telefone                String
  unidadeHospitalar       UnidadeHospitalar @relation(fields: [unidadeHospitalarId], references: [id])
  papel                   Papel
  especialidade           Especialidade     @relation(fields: [especialidadeId], references: [id])
  createdAt               DateTime          @default(now())
  updatedAt               DateTime          @updatedAt
  unidadeHospitalarId     String            @db.ObjectId
  especialidadeId         String            @db.ObjectId
  Solicitacao             Solicitacao[]
  TransferenciasOrigem    Transferencia[]   @relation("OrigemMedicoTransferencia")
  TransferenciasDestino   Transferencia[]   @relation("DestinoMedicoTransferencia")
  TransferenciasRegulador Transferencia[]   @relation("ReguladorMedicoTransferencia")
}

model DocumentoTransferencia {
  id                            String          @id @default(auto()) @map("_id") @db.ObjectId
  drogasAdministradas           String[]
  procedimentosAcondicionamento String[]
  procedimentosRecebimento      String[]
  createdAt                     DateTime        @default(now())
  updatedAt                     DateTime        @updatedAt
  Solicitacao                   Solicitacao[]
  Transferencia                 Transferencia[]
}

enum Classificacao {
  PRIMARIA
  SECUNDARIA
  TERCIARIA
}

model Prontuario {
  id                 String        @id @default(auto()) @map("_id") @db.ObjectId
  classificacao      Classificacao
  medicamentosAtuais String[]
  createdAt          DateTime      @default(now())
  updatedAt          DateTime      @updatedAt
  Paciente           Paciente[]
}

enum TipoSanguineo {
  A_POSITIVO
  A_NEGATIVO
  B_POSITIVO
  B_NEGATIVO
  AB_POSITIVO
  AB_NEGATIVO
  O_POSITIVO
  O_NEGATIVO
}

model Paciente {
  cpf           String          @id @map("_id")
  nome          String
  telefone      String
  email         String
  endereco      Endereco        @relation(fields: [enderecoId], references: [id])
  tipoSanguineo TipoSanguineo
  prontuario    Prontuario      @relation(fields: [prontuarioId], references: [id])
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  enderecoId    String          @db.ObjectId
  prontuarioId  String          @db.ObjectId
  Solicitacao   Solicitacao[]
  Transferencia Transferencia[]
}

model Solicitacao {
  id                 String                 @id @default(auto()) @map("_id") @db.ObjectId
  medico             Medico                 @relation(fields: [medicoId], references: [crm])
  paciente           Paciente               @relation(fields: [pacienteId], references: [cpf])
  motivo             String
  documento          DocumentoTransferencia @relation(fields: [documentoId], references: [id])
  especialidade      Especialidade          @relation(fields: [especialidadeId], references: [id])
  horarioSolicitacao DateTime
  createdAt          DateTime               @default(now())
  updatedAt          DateTime               @updatedAt
  medicoId           String
  pacienteId         String
  documentoId        String                 @db.ObjectId
  especialidadeId    String                 @db.ObjectId
  Transferencia      Transferencia[]
}

enum MeioTransporte {
  AMBULANCIA
  HELICOPTERO
  AVIAO
}

model Transferencia {
  id                     String                 @id @default(auto()) @map("_id") @db.ObjectId
  meioTransporte         MeioTransporte
  destino                UnidadeHospitalar      @relation("DestinoTransferencia", fields: [destinoId], references: [id])
  medicoDestino          Medico                 @relation("DestinoMedicoTransferencia", fields: [medicoDestinoId], references: [crm])
  origem                 UnidadeHospitalar      @relation("OrigemTransferencia", fields: [origemId], references: [id])
  medicoOrigem           Medico                 @relation("OrigemMedicoTransferencia", fields: [medicoOrigemId], references: [crm])
  medicoRegulador        Medico                 @relation("ReguladorMedicoTransferencia", fields: [medicoReguladorId], references: [crm])
  horarioSaida           DateTime
  horarioPrevistoChegada DateTime
  distancia              Float
  documento              DocumentoTransferencia @relation(fields: [documentoId], references: [id])
  paciente               Paciente               @relation(fields: [pacienteId], references: [cpf])
  solicitacao            Solicitacao            @relation(fields: [solicitacaoId], references: [id])
  createdAt              DateTime               @default(now())
  updatedAt              DateTime               @updatedAt
  destinoId              String                 @db.ObjectId
  medicoDestinoId        String
  origemId               String                 @db.ObjectId
  medicoOrigemId         String
  medicoReguladorId      String
  documentoId            String                 @db.ObjectId
  pacienteId             String
  solicitacaoId          String                 @db.ObjectId
}
